---
title: Zombies population model
author: Daniel Lakeland
date: 2022-11-18
cache: true
---

Back in 2010 while I was working on my PhD in Civil Engineering I was taking a course in dynamical systems, and read an article about modeling Zombie infestation with ODEs. I wrote a [blog post with an updated model](http://models.street-artists.org/2010/03/01/improved-zombie-dynamics/). At the time Julia was not even being worked on in early versions. I used Maxima to do some plotting of my equations. Let's see how much nicer it is to work with ODEs using the outrageously good DifferentialEquations.jl library.

The original model was a compartment model with the compartments: H (Humans), Z (Zombies), D (reanimatable dead), G (Gone), and a state variable hwin (probability that the humans win in a confrontation, a learning parameter)



```{julia}

using DifferentialEquations, StatsPlots

function zombies!(du, u, p, t)
    (H,Z,D,G,hwin) = u
    (b,d,r,e,rot,l,ldec,teach) = p
    sqrtZ = Z < 0.0 ? 0.0 : sqrt(Z) # otherwise we'll try to take sqrt of negative number sometimes
    du[1] = b*H - d*H - (1-hwin)*H*Z
    du[2] = r*D - hwin*H*Z + (1-hwin)H*Z -e*sqrtZ
    du[3] = d*H - rot*D - r*D
    du[4] = hwin*H*Z + rot*D + e*sqrtZ
    du[5] = l * hwin*sqrt(1-hwin)*H*Z - ldec*hwin+teach*(1-hwin)
end


```

After defining the differential in time, we need to create an ODEProblem to represent the specific problem we want solved, including the numerical values for p.

```{julia}

zinit = 1e-5
hwininit = .1

# We simulate time in days because its makes estimating some of the rates easier
pvals = [.065/365,.02/365,.001/365,0.00,.15,10.0,.1,0.0]
prob = ODEProblem(zombies!,[1.0-zinit,zinit,0.015,0.0,hwininit], 120.0, pvals)

let sol = plot();
    try
        sol = solve(prob,Tsit5(); abstol = 1e-11, reltol=1e-8)
        nothing
    catch e
        println(e)
        sol = plot()
    finally
        display(plot(sol; title="Humans u[1] vs Zombies u[2]"))
    end
end


```

This is a basic estimate of the fate of humanity. When zombies crop up, a large number of people will die, but humans quickly learn to kill the zombies! This suppresses the zombies down until people get lax in their zombie fighting skills, and a new wave shows up... this repeates until enough people have died that there is no chance to fight the zombies and they take over. Suppose we increase the education rate to .04 per day to try to keep the overall zombie killing skills elevated?

```{julia}
pvals2 = copy(pvals)
pvals2[4] = .000 # zombie killer elite "e"
pvals2[8] = .08 # education rate "teach"
prob = ODEProblem(zombies!,[1.0-zinit,zinit,0.015,0.0,hwininit], 220.0, pvals2)

let sol = plot()
    try 
        sol = solve(prob,Tsit5(); abstol=1e-11,reltol=1e-8)
        nothing
    catch e
        println(e)
        sol=plot()
    finally 
        display(plot(sol))
    end
end


```

The humans do better, they survive longer, but now rather than waves of zombies, we come to a war of attrition with equal probability of winning for zombies or humans. Slowly the zombies will take over! We need an equilibrium success rate even higher! More education for everyone!

```{julia}
pvals2 = copy(pvals)
pvals2[4] = .000 # zombie killer elite "e"
pvals2[8] = .15 # education rate "teach"
prob = ODEProblem(zombies!,[1.0-zinit,zinit,0.015,0.0,hwininit], 220.0, pvals2)

let sol = plot()
    try 
        sol = solve(prob,Tsit5(); abstol=1e-11,reltol=1e-8)
        nothing
    catch e
        println(e)
        sol=plot()
    finally 
        display(plot(sol))
    end
end


```

Hooray, with appropriate vigilance and education, we can combat zombies. But is it reasonable to think that everyone will on average have a better than 50% chance to destroy zombies all the time? Suppose we lower our education rate, but focus on an elite zombie killer force that can come into action rapidly for small quantities of zombies?

```{julia}
pvals2 = copy(pvals)
pvals2[4] = .001 # zombie killer elite "e"
pvals2[8] = .05 # education rate "teach"
prob = ODEProblem(zombies!,[1.0-zinit,zinit,0.015,0.0,hwininit], 220.0, pvals2)

let sol = plot()
    try 
        sol = solve(prob,Tsit5(); abstol=1e-11,reltol=1e-8)
        nothing
    catch e
        println(e)
        sol=plot()
    finally 
        display(plot(sol))
    end
end


```

The zombie killer elite weren't enough. But by the way, if we have less than 1 zombie they should become "extinct" at least, 
if they aren't reanimating spontaneously from the graveyards. Let's invoke a callback that sets Z=0 if Z drops below 1e-6 (assuming there are 1M initial citizens this means below 1 zombie)

Also, we will try to find approximately the smallest elite force that will let us spend enough for .03 education rate.

```{julia}

zombieextinct = DiscreteCallback((u,t,int) -> u[2] < 1e-6,
    int -> int.u[2] = 0.0)

cb = zombieextinct 

pvals2[4] = .0028 # zombie killer elite "e"
pvals2[8] = .03 # education rate "teach"


let sol = plot()
    try
        sol = solve(prob,Tsit5(); 
            callback = cb, abstol=1e-11, reltol=1e-8)
        nothing
    catch e
        println(e)
        sol = plot()

    finally
        display(plot(sol))
    end
end



```

